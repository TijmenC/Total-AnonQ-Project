{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tijme\\\\Documents\\\\Semester 3\\\\anonq-react\\\\src\\\\components\\\\Question.js\";\nimport React, { useState, useEffect } from \"react\";\nimport '../styling/Question.css';\nimport { Row, Col } from 'react-bootstrap';\nimport Poll from \"./Poll\";\nimport PollService from \"../Services/PollService\";\n\nfunction Question({\n  question,\n  polls\n}) {\n  const [toggle, setToggle] = useState(false);\n  const [viewpolls, setPolls] = useState([]);\n  useEffect(() => {\n    setPolls(polls);\n    setToggle(false);\n  }, [polls]);\n\n  const getPercentages = questionid => {\n    setToggle(!toggle);\n    PollService.GetPollPercentages(questionid).then(res => {\n      console.log(res);\n      console.log(res.data);\n      setPolls(res.data);\n    }).catch(error => {\n      console.log(error.response.data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionHead mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-md-left\",\n    \"data-testid\": \"question-label-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: true,\n    sm: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }\n  }, question.title)))), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-md-left\",\n    \"data-testid\": \"question-label-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: true,\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h8\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }\n  }, question.description)))), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-md-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), viewpolls.map(viewpolls => /*#__PURE__*/React.createElement(Poll, {\n    key: viewpolls.id,\n    polls: viewpolls,\n    percentages: getPercentages,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/tijme/Documents/Semester 3/anonq-react/src/components/Question.js"],"names":["React","useState","useEffect","Row","Col","Poll","PollService","Question","question","polls","toggle","setToggle","viewpolls","setPolls","getPercentages","questionid","GetPollPercentages","then","res","console","log","data","catch","error","response","title","description","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,yBAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAIA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,EAAuC;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACW,SAAD,EAAYC,QAAZ,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AAGGC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACJ,KAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACF,GAHS,EAGP,CAACF,KAAD,CAHO,CAAT;;AAMH,QAAMK,cAAc,GAAIC,UAAD,IAAgB;AACnCJ,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACCJ,IAAAA,WAAW,CAACU,kBAAZ,CAA+BD,UAA/B,EAA2CE,IAA3C,CAAiDC,GAAD,IAAS;AACtDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAR,MAAAA,QAAQ,CAACK,GAAG,CAACG,IAAL,CAAR;AACH,KAJA,EAKAC,KALA,CAKOC,KAAD,IAAW;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,QAAN,CAAeH,IAA3B;AACH,KAPA;AASJ,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAyC,mBAAY,sBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,MAAP;AAAQ,IAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,QAAQ,CAACiB,KAAd,CAAH,CADJ,CADJ,CADJ,eAMI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAyC,mBAAY,4BAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,MAAP;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKjB,QAAQ,CAACkB,WAAd,CAAH,CADJ,CADJ,CANJ,eAWI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKd,SAAS,CAACe,GAAV,CAAef,SAAD,iBACX,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,SAAS,CAACgB,EAArB;AAAyB,IAAA,KAAK,EAAEhB,SAAhC;AAA2C,IAAA,WAAW,EAAEE,cAAxD;AAAwE,IAAA,MAAM,EAAEJ,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFL,CAXJ,CADJ;AAoBH;;AACD,eAAeH,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport '../styling/Question.css'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Poll from \"./Poll\";\r\nimport PollService from \"../Services/PollService\"\r\n\r\n\r\n\r\nfunction Question({ question, polls }) {\r\n    const [toggle, setToggle] = useState(false);\r\n    const [viewpolls, setPolls] = useState([]);\r\n    \r\n\r\n       useEffect(() => {\r\n         setPolls(polls)\r\n         setToggle(false)\r\n      }, [polls]);\r\n\r\n\r\n    const getPercentages = (questionid) => {\r\n        setToggle(!toggle);\r\n         PollService.GetPollPercentages(questionid).then((res) => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            setPolls(res.data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.response.data);\r\n        });\r\n        \r\n    };\r\n\r\n    return ( \r\n        <div className=\"questionHead mx-auto\">\r\n            <Row className=\"justify-content-md-left\" data-testid=\"question-label-title\">\r\n                <Col md sm=\"8\">\r\n                    <b><h3>{question.title}</h3></b>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-left\" data-testid=\"question-label-description\">\r\n                <Col md sm=\"12\">\r\n                    <b><h8>{question.description}</h8></b>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-md-left\" >\r\n                <br />\r\n                {viewpolls.map((viewpolls) => (\r\n                    <Poll key={viewpolls.id} polls={viewpolls} percentages={getPercentages} toggle={toggle} />\r\n                ))}\r\n            </Row>\r\n    </div>\r\n    );\r\n}\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}