{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tijme\\\\Documents\\\\Semester 3\\\\anonq-react\\\\src\\\\components\\\\SavedQuestions.js\";\nimport React, { useState } from \"react\";\nimport '../styling/Navigationbar.css';\nimport { Dropdown } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\n\nfunction SavedQuestions() {\n  const [togglecookies, setToggleCookies] = useState(false);\n  const [questioncookies, setQuestioncookies] = useState(Cookies.get);\n\n  const getCookies = () => {\n    setQuestioncookies(Cookies.get());\n\n    if (questioncookies.QuestionID != null) {\n      setToggleCookies(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    onClick: getCookies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    size: \"sm\",\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Questions\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\" + questioncookies.QuestionID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, togglecookies ? /*#__PURE__*/React.createElement(Dropdown.Item, {\n    href: \"#/action-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 28\n    }\n  }, \"Your Question\") : null)));\n}\n\nexport default SavedQuestions;","map":{"version":3,"sources":["C:/Users/tijme/Documents/Semester 3/anonq-react/src/components/SavedQuestions.js"],"names":["React","useState","Dropdown","Link","Cookies","SavedQuestions","togglecookies","setToggleCookies","questioncookies","setQuestioncookies","get","getCookies","QuestionID"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,8BAAP;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SACEC,IADF,QAEO,kBAFP;AAGA,OAAOC,OAAP,MAAoB,WAApB;;AACA,SAASC,cAAT,GAA0B;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAACG,OAAO,CAACM,GAAT,CAAtD;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvBF,IAAAA,kBAAkB,CAACL,OAAO,CAACM,GAAR,EAAD,CAAlB;;AACA,QAAIF,eAAe,CAACI,UAAhB,IAA8B,IAAlC,EAAwC;AACrCL,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACF;AACF,GALD;;AAOA,sBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEI,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,IAAI,EAAC,IAAtB;AAA2B,IAAA,EAAE,EAAC,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,MAAMH,eAAe,CAACI,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,aAAa,gBAAG,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,GAAoE,IADpF,CADF,CAJF,CADF;AAYD;;AACD,eAAeD,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport '../styling/Navigationbar.css';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Cookies from 'js-cookie'\r\nfunction SavedQuestions() {\r\n  const [togglecookies, setToggleCookies] = useState(false)\r\n  const [questioncookies, setQuestioncookies] = useState(Cookies.get)\r\n  const getCookies = () => {\r\n    setQuestioncookies(Cookies.get())\r\n    if (questioncookies.QuestionID != null) {\r\n       setToggleCookies(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dropdown onClick={getCookies}>\r\n      <Dropdown.Toggle size=\"sm\" id=\"dropdown-basic\">\r\n        Questions\r\n</Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Link to={\"/\" + questioncookies.QuestionID}>\r\n          {togglecookies ? <Dropdown.Item href=\"#/action-1\">Your Question</Dropdown.Item> : null} \r\n        </Link>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  )\r\n}\r\nexport default SavedQuestions"]},"metadata":{},"sourceType":"module"}