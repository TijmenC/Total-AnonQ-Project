[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/components/Navbar.js":"4","/app/src/pages/AdminPanel.js":"5","/app/src/components/Question.js":"6","/app/src/components/Comment.js":"7"},{"size":693,"mtime":1607595619119,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":326,"mtime":1607595629356,"results":"11","hashOfConfig":"9"},{"size":595,"mtime":1607611470259,"results":"12","hashOfConfig":"9"},{"size":934,"mtime":1608298101544,"results":"13","hashOfConfig":"9"},{"size":2989,"mtime":1608298050029,"results":"14","hashOfConfig":"9"},{"size":1708,"mtime":1608298042599,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"iuro77",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],["32","33"],"/app/src/reportWebVitals.js",[],"/app/src/App.js",[],"/app/src/components/Navbar.js",[],"/app/src/pages/AdminPanel.js",[],"/app/src/components/Question.js",["34","35"],"\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport {  Modal, Button, Row, Col } from 'react-bootstrap';\r\nimport axios from \"axios\"\r\nimport \"../styling/Question.css\"\r\nimport Comment from \"./Comment\"\r\n\r\n\r\nfunction Question({ question, refreshQuestions }) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [comments, setComments] = useState([]);\r\n    const [date, setDate] = useState();\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(() => {\r\n        handleComments()\r\n      }, [question.id]);\r\n\r\n    const handleDelete = () => {\r\n        axios.delete('https://localhost:23459/api/question/DeleteQuestionAndPolls/' + question.id)\r\n        .then(function (response) {\r\n            console.log(response)\r\n            handleClose()\r\n            refreshQuestions()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n\r\n    }\r\n\r\n    const handleComments = () => {\r\n        axios.get('https://localhost:23459/api/comment/' + question.id + '/GetAllCommentsID')\r\n        .then(function (response) {\r\n            console.log(response)\r\n            setComments(response.data)\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n\r\n    }\r\n\r\n    function HumanDateTime(dates) {\r\n        var date = new Date(dates + \"Z\");\r\n        date = date.toUTCString().split(\", \");\r\n        date = date[1].slice(0, 17);\r\n        setDate(date);\r\n      }\r\n\r\n    \r\n      useEffect(() => {\r\n        if (question.deletionTime !== undefined) {\r\n          HumanDateTime(question.deletionTime);\r\n        }\r\n      }, [question.deleteTime]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"rounded container QuestionDiv\">\r\n                <Row>\r\n                    <Col md=\"1\">{question.id}</Col>\r\n                    <Col md=\"1\">{question.title}</Col>\r\n                    <Col md=\"1\">{question.tag}</Col>\r\n                    <Col md=\"2\">{date}</Col>\r\n                    <Col md=\"1\">{question.commentsEnabled.toString()}</Col>\r\n                    <Col md=\"2\"><Button onClick={handleShow}>Show Actions</Button></Col>\r\n                    <Col md=\"2\"><Comment comments={comments} refreshComments={handleComments} /></Col>\r\n                </Row>\r\n            </div>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Delete Question</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure you want to delete?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n          </Button>\r\n                    <Button variant=\"primary\"  onClick={handleDelete}>\r\n                        Delete Question\r\n          </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\nexport default Question\r\n","/app/src/components/Comment.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":21,"column":10,"nodeType":"42","endLine":21,"endColumn":23,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":60,"column":10,"nodeType":"42","endLine":60,"endColumn":31,"suggestions":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleComments'. Either include it or remove the dependency array.","ArrayExpression",["48"],"React Hook useEffect has a missing dependency: 'question.deletionTime'. Either include it or remove the dependency array.",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},{"desc":"52","fix":"53"},"Update the dependencies array to be: [handleComments, question.id]",{"range":"54","text":"55"},"Update the dependencies array to be: [question.deleteTime, question.deletionTime]",{"range":"56","text":"57"},[582,595],"[handleComments, question.id]",[1664,1685],"[question.deleteTime, question.deletionTime]"]